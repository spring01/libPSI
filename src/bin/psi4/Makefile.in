srcdir = @srcdir@
VPATH = @srcdir@

include ../MakeVars
PSITARGET = $(top_objdir)/bin/$(shell basename `pwd`)
MODULE = false

MAKE_PYTHON_MODULE=@MAKE_PYTHON_MODULE@

LDLIBS += $(LAPACK) $(BLAS) $(BOOST_FILESYSTEM_LIB) $(BOOST_PYTHON_LIB) $(BOOST_REGEX_LIB) $(BOOST_SERIALIZATION_LIB) $(BOOST_SYSTEM_LIB) $(BOOST_THREAD_LIB) $(BOOST_LDFLAGS) -lpthread $(PYTHON_LDFLAGS)
CXXINC += -DINSTALLEDPSIDATADIR=\"$(pkgdatadir)\"

# gfortranbegin contains main, so we can't link it in or we'll get a linker freakout
FILTEREDLDLIBS = $(filter-out -lgfortranbegin,$(LDLIBS))

# NOTE: Keep PSI_parallel last in the PSI library list (but before boost). It contains the fprintf override.
PSILIBS = \
-lPSI_mints_wrapper -lPSI_dfmp2 -lPSI_scf  -lPSI_ccenergy -lPSI_ccsort -lPSI_psimrcc \
-lPSI_transqt2 -lPSI_cctriples -lPSI_scf_solver -lPSI_fock -lPSI_dcft -lPSI_mcscf -lPSI_sapt \
-lPSI_sapt_solver -lPSI_cchbar -lPSI_cclambda -lPSI_ccdensity -lPSI_transqt \
-lPSI_ccresponse -lPSI_detci -lPSI_occ -lPSI_mrcc -lPSI_fnocc \
-lPSI_cceom -lPSI_adc -lPSI_thermo \
-lPSI_functional -lPSI_disp -lPSI_thce -lPSI_3index -lPSI_mints_deriv -lPSI_optking -lPSI_findif \
-lPSI_mints -lPSI_trans -lPSI_dpd -lPSI_chkpt -lPSI_iwl -lPSI_psio -lPSI_qt \
-lPSI_ciomr -lPSI_options -lPSI_moinfo -lPSI_util \
-lPSI_stable -lPSI_deriv -lPSI_scfgrad -lPSI_int -lPSI_util -lPSI_diis \
-lPSI_plugin -lPSI_parallel

ifeq ($(HAVE_MADNESS),1)
  PSILIBS += $(madlibs)/world/libMADworld.a
  PSILIBS += $(madlibs)/tensor/libMADtensor.a
endif
ifeq ($(HAVE_ELEMENTAL),1)
  PSILIBS += $(elemlibs)
endif
ifeq ($(HAVE_SCALAPACK),1)
  PSILIBS += $(scalapacklibs)
endif
ifeq ($(MAKE_PYTHON_MODULE),1)
  LDFLAGS += -shared
  PSITARGET = $(top_objdir)/bin/$(shell basename `pwd`).so
endif

# The psilibs need a little extra handling for plugins on linux
ifeq ($(HAVE_PLUGINS),yes)
   ifeq ($(TARGET_OS),linux-gnu)
       START_EXPORT = -Wl,--whole-archive
       END_EXPORT   = -Wl,--no-whole-archive
   endif
endif

CXXSRC = \
set_memory.cc \
psi4.cc read_options.cc clean.cc \
psi_start.cc psi_stop.cc version.cc \
script.cc python.cc export_benchmarks.cc \
export_blas_lapack.cc export_plugins.cc \
export_psio.cc export_chkpt.cc export_mints.cc \
export_functional.cc export_oeprop.cc create_new_plugin.cc

BINOBJ = $(CXXSRC:%.cc=%.o)

include ../MakeRules

ifneq "$(MAKECMDGOALS)" "clean"
$(BINOBJ:%.o=%.d): $(DEPENDINCLUDE)
include $(BINOBJ:%.o=%.d)
endif

