import os
import subprocess

top_srcdir = "@top_srcdir@"

# The checking / removing is to ensure dependencies are handled properly by Make.
# The introduction of cmake should make this less complicated
def write_version(version, branch):
    version_str = "#define GIT_VERSION \"{%s} %s\"\n" % (branch, version)
    open('gitversion.h.tmp', 'w').write(version_str)
    if len(version) == 0:
        version_str = "#undef GIT_VERSION"

    try:
        current_file = open('gitversion.h', 'r').read()
    except IOError:
        current_file = ""

    if current_file != version_str:
        open('gitversion.h', 'w').write(version_str)
        try:
            os.remove("version.o")
        except OSError:
            pass

# Use Git to find the latest version number
try:
    command = "git log -1 --pretty=%H"
    process = subprocess.Popen(command.split(), stderr=subprocess.PIPE, stdout=subprocess.PIPE, cwd = top_srcdir)
    (out, err) = process.communicate()
    version = str(out).rstrip()
    if process.returncode:
        version = ""
except:
    version = ""

# Use Git to find current branch name
#   Returns "refs/heads/BRANCHNAME"
#   Use [11:] to skip refs/heads/
try:
    command = "git symbolic-ref -q HEAD"
    process = subprocess.Popen(command.split(), stderr=subprocess.PIPE, stdout=subprocess.PIPE, cwd = top_srcdir)
    (out, err) = process.communicate()
    branch = str(out).rstrip()[11:]
    if process.returncode:
        branch = "detached?"
except:
    branch = "detached?"

write_version(version, branch)
