#! Symmetry tests for a range of molecules.  This doesn't actually compute any energies, but
#! serves as an example of the many ways to specify geometries in Psi4.

import qcdb

# References for Nuclear Repulsion Energy (from PSI4)
nre_c2h2 = 23.2240598907
nre_n2h2 = 29.3739194655
nre_cn1 = 15.8753162577
nre_ch4 = 13.4353891954
nre_cn2 = 15.8753162577
nre_nh3 = 12.7621425732
nre_trip = 32.2639712167
nre_sing = 32.2760653668
nre_cat = 32.2699225147
nre_h2o2 = 36.3492588451
nre_c4h4cl2f2 = 537.100310876
nre_li = 165.45925091

# References for final oriented geometry (from PSI4)
geom_c2h2 =  \
       [[  0.000000000000,     0.000000000000,     0.650000000000],
        [  0.000000000000,     0.000000000000,    -0.650000000000],
        [  0.000000000000,     0.000000000000,     1.750000000000],
        [  0.000000000000,     0.000000000000,    -1.750000000000]]

geom_n2h2 =  \
       [[  0.000000000000,     0.700000000000,     0.000000000000],
        [  0.000000000000,    -0.700000000000,     0.000000000000],
        [ -0.642787609687,     1.466044443119,     0.000000000000],
        [  0.642787609687,    -1.466044443119,     0.000000000000]]

geom_cn1 =  \
       [[  0.000000000000,     0.000000000000,    -0.753922540200],
        [  0.000000000000,     0.000000000000,     0.646077459800]]

geom_ch4 = \
       [[  0.000000000000,     0.000000000000,     0.000000000000],
        [  0.000000000000,     0.889981273211,    -0.629311793417],
        [  0.889981273211,     0.000000000000,     0.629311793417],
        [ -0.889981273211,     0.000000000000,     0.629311793417],
        [  0.000000000000,    -0.889981273211,    -0.629311793417]]

geom_cn2 = \
       [[  0.000000000000,     0.000000000000,    -0.753922540200],
        [  0.000000000000,     0.000000000000,     0.646077459800]]

geom_nh3 = \
       [[  0.000000000000,    -0.071293777318,     0.000000000000],
        [ -0.430496198842,     0.330193571336,    -0.745641288860],
        [ -0.430496198842,     0.330193571336,     0.745641288860],
        [  0.860992397685,     0.330193571336,     0.000000000000]]

geom_trip = \
       [[  0.000000000000,     0.000000000000,    -0.705000000000],
        [  0.000000000000,     0.000000000000,     0.705000000000],
        [  0.000000000000,     0.924372424811,    -1.282611998014],
        [  0.000000000000,    -0.924372424811,    -1.282611998014],
        [ -0.924372424811,     0.000000000000,     1.282611998014],
        [  0.924372424811,     0.000000000000,     1.282611998014]]

geom_sing = \
       [[  0.000000000000,     0.000000000000,    -0.705000000000],
        [  0.000000000000,     0.000000000000,     0.705000000000],
        [  0.000000000000,     0.924372424811,    -1.282611998014],
        [  0.000000000000,    -0.924372424811,    -1.282611998014],
        [  0.000000000000,     0.924372424811,     1.282611998014],
        [  0.000000000000,    -0.924372424811,     1.282611998014]]

geom_cat = \
       [[  0.000000000000,     0.000000000000,    -0.705000000000],
        [  0.000000000000,     0.000000000000,     0.705000000000],
        [  0.353742012310,     0.854008763700,    -1.282611998014],
        [ -0.353742012310,    -0.854008763700,    -1.282611998014],
        [ -0.353742012310,     0.854008763700,     1.282611998014],
        [  0.353742012310,    -0.854008763700,     1.282611998014]]

geom_h2o2 = \
       [[  0.000000000000,     0.700000000000,     0.042548675499],
        [  0.000000000000,    -0.700000000000,     0.042548675499],
        [ -0.783370742839,     0.984700949613,    -0.675278356978],
        [  0.783370742839,    -0.984700949613,    -0.675278356978]]

geom_c4h4cl2f2 = \
       [[  0.432781050498,     1.898774028282,     0.810337938486],
        [ -1.658744642774,     0.805191018766,    -0.984829058337],
        [  1.658744642774,    -0.805191018766,     0.984829058337],
        [ -0.432781050498,    -1.898774028282,    -0.810337938486],
        [ -0.317971784026,     2.532165941971,     2.640915161238],
        [ -1.615729990528,     1.614062700629,    -2.881498569657],
        [  1.615729990528,    -1.614062700629,     2.881498569657],
        [  0.317971784026,    -2.532165941971,    -2.640915161238],
        [ -4.852178875691,     1.024620478757,     0.190249941464],
        [  4.852178875691,    -1.024620478757,    -0.190249941464],
        [ -1.913713787211,    -3.739567959534,     0.258534542158],
        [  1.913713787211,     3.739567959534,    -0.258534542158]]

geom_li = \
       [[  0.000000000000,     0.000000000000,     0.000000000000],
        [ -1.497220431853,     0.000000000000,    -1.169756803119],
        [  1.497220431853,     0.000000000000,    -1.169756803119],
        [  0.000000000000,    -1.497220431853,     1.169756803119],
        [  0.000000000000,     1.497220431853,     1.169756803119],
        [ -1.565808146965,     0.498804253130,    -1.977713511362],
        [ -2.264066335924,    -0.551608165437,    -1.068881676192],
        [  1.565808146965,    -0.498804253130,    -1.977713511362],
        [  2.264066335924,     0.551608165437,    -1.068881676192],
        [ -0.498804253130,    -1.565808146965,     1.977713511362],
        [  0.551608165437,    -2.264066335924,     1.068881676192],
        [  0.498804253130,     1.565808146965,     1.977713511362],
        [ -0.551608165437,     2.264066335924,     1.068881676192]]



# DinftyH Symmetry (D2h Abelian)
C2H2 = qcdb.Molecule("""
   C 0 0  r1
   C 0 0 -r1
   H 0 0  r2
   H 0 0 -r2
   r1 = 0.65
   r2 = 1.75
""")

print("\tC2H2 Test...")
C2H2.update_geometry()
#C2H2.print_out()
#compare_strings("d2h", C2H2.schoenflies_symbol(), "C2H2 point group");  #TEST
qcdb.compare_values(nre_c2h2, C2H2.nuclear_repulsion_energy(), 6, "C2H2 nuclear repulsion energy");  #TEST
geom_now = qcdb.mscale(C2H2.geometry(), qcdb.psi_bohr2angstroms)
qcdb.compare_matrices(geom_c2h2, geom_now, 6, "C2H2 geometry and orientation") #TEST


# C2h Symmetry
N2H2 = qcdb.Molecule("""
   N
   N 1 rNN
   H 1 rNH 2 aHNN
   H 2 rNH 1 aHNN 3 180.0

   rNH  = 1.0
   rNN  = 1.4
   aHNN = 140.0
""")

print("\tN2H2 Test...")
N2H2.update_geometry()
#N2H2.print_out()
#compare_strings("c2h", N2H2.schoenflies_symbol(), "N2H2 point group");  #TEST
qcdb.compare_values(nre_n2h2, N2H2.nuclear_repulsion_energy(), 6, "N2H2 nuclear repulsion energy");  #TEST
geom_now = qcdb.mscale(N2H2.geometry(), qcdb.psi_bohr2angstroms)
qcdb.compare_matrices(geom_n2h2, geom_now, 6, "N2H2 geometry and orientation") #TEST


# CinftyV Symmetry (C2v Abelian)
CN = qcdb.Molecule("""
   0 2
   C 0.0 0.0 0.0
   N 0.0 0.0 r
   r = 1.4
""")

print("\tCN Test...")
CN.update_geometry()
#CN.print_out()
#compare_strings("c2v", CN.schoenflies_symbol(), "CN point group");  #TEST
qcdb.compare_values(nre_cn1, CN.nuclear_repulsion_energy(), 6, "CN nuclear repulsion energy");  #TEST
geom_now = qcdb.mscale(CN.geometry(), qcdb.psi_bohr2angstroms)
qcdb.compare_matrices(geom_cn1, geom_now, 6, "CN geometry and orientation") #TEST


# Td Symmetry (C2v Abelian)
CH4 = qcdb.Molecule("""
   C
   H 1 r
   H 1 r 2 TDA
   H 1 r 2 TDA 3 120
   H 1 r 2 TDA 4 120

   r = 1.09
""")

print("\tCH4 Test...")
CH4.update_geometry()
#CH4.print_out()
#compare_strings("c2v", CH4.schoenflies_symbol(), "CH4 point group");  #TEST
qcdb.compare_values(nre_ch4, CH4.nuclear_repulsion_energy(), 6, "CH4 nuclear repulsion energy");  #TEST
geom_now = qcdb.mscale(CH4.geometry(), qcdb.psi_bohr2angstroms)
qcdb.compare_matrices(geom_ch4, geom_now, 6, "CH4 geometry and orientation") #TEST


# CinftyV Symmetry (C2v Abelian)
CN = qcdb.Molecule("""
   0 2
   C 0.0 0.0 0.0
   N 0.0 0.0 r
   r = 1.4
""")

print("\tCN Test...")
CN.update_geometry()
#CN.print_out()
#compare_strings("c2v", CN.schoenflies_symbol(), "CN point group");      #TEST
qcdb.compare_values(nre_cn2, CN.nuclear_repulsion_energy(), 6, "CN nuclear repulsion energy");      #TEST
geom_now = qcdb.mscale(CN.geometry(), qcdb.psi_bohr2angstroms)
qcdb.compare_matrices(geom_cn2, geom_now, 6, "CN geometry and orientation") #TEST



# C3v Symmetry (Cs subgroup)
NH3 = qcdb.Molecule("""
    X
    N 1 1.0
    H 2 rNH 1 aXNH
    H 2 rNH 1 aXNH 3 120.0
    H 2 rNH 1 aXNH 4 120.0

    rNH = 0.95
    aXNH = 115.0
""")

print("\tNH3 Test...")
NH3.update_geometry()
#NH3.print_out()
#compare_strings("cs", NH3.schoenflies_symbol(), "NH3 point group");     #TEST
qcdb.compare_values(nre_nh3, NH3.nuclear_repulsion_energy(), 6, "NH3 nuclear repulsion energy");     #TEST
geom_now = qcdb.mscale(NH3.geometry(), qcdb.psi_bohr2angstroms)
qcdb.compare_matrices(geom_nh3, geom_now, 6, "NH3 geometry and orientation") #TEST


# C2v Symmetry (could also be D2)
triplet_ethylene = qcdb.Molecule(""" 
    C1
    C2 C1 rCC
    H1 C1 rCH C2 aHCC
    H2 C1 rCH C2 aHCC H1 180.0
    H3 C2 rCH C1 aHCC H1 D
    H4 C2 rCH C1 aHCC H3 180.0

    rCC  = 1.41
    rCH  = 1.09
    aHCC = 122.0
    D    = 90.0
""")

print("\tTriplet Ethylene Test...")
triplet_ethylene.update_geometry()
#triplet_ethylene.print_out()
#compare_strings("c2v", triplet_ethylene.schoenflies_symbol(), "Triplet Ethylene point group");  #TEST
qcdb.compare_values(nre_trip, triplet_ethylene.nuclear_repulsion_energy(), 6, "Triplet Ethylene nuclear repulsion energy");  #TEST
geom_now = qcdb.mscale(triplet_ethylene.geometry(), qcdb.psi_bohr2angstroms)
qcdb.compare_matrices(geom_trip, geom_now, 6, "Triplet Ethylene geometry and orientation") #TEST


# D2h Symmetry
singlet_ethylene = qcdb.Molecule("""
    C1
    C2 C1 rCC
    H1 C1 rCH C2 aHCC
    H2 C1 rCH C2 aHCC H1 180.0
    H3 C2 rCH C1 aHCC H1 D
    H4 C2 rCH C1 aHCC H3 180.0

    rCC  = 1.41
    rCH  = 1.09
    aHCC = 122.0
    D    = 0.0
""")

print("\tSinglet Ethylene Test...")
singlet_ethylene.update_geometry()
#singlet_ethylene.print_out()
#compare_strings("d2h", singlet_ethylene.schoenflies_symbol(), "Singlet Ethylene point group");  #TEST
qcdb.compare_values(nre_sing, singlet_ethylene.nuclear_repulsion_energy(), 6, "Singlet Ethylene nuclear repulsion energy");  #TEST
geom_now = qcdb.mscale(singlet_ethylene.geometry(), qcdb.psi_bohr2angstroms)
qcdb.compare_matrices(geom_sing, geom_now, 6, "Singlet Ethylene geometry and orientation") #TEST


# D2 Symmetry
ethylene_cation = qcdb.Molecule("""
    C1
    C2 C1 rCC
    H1 C1 rCH C2 aHCC
    H2 C1 rCH C2 aHCC H1 180.0
    H3 C2 rCH C1 aHCC H1 D
    H4 C2 rCH C1 aHCC H3 180.0

    rCC  = 1.41
    rCH  = 1.09
    aHCC = 122.0
    D    = 45.0
""")

print("\tEthylene Cation Test...")
ethylene_cation.update_geometry()
#ethylene_cation.print_out()
#compare_strings("d2", ethylene_cation.schoenflies_symbol(), "Ethylene cation point group");  #TEST
qcdb.compare_values(nre_cat, ethylene_cation.nuclear_repulsion_energy(), 6, "Ethylene cation nuclear repulsion energy");  #TEST
geom_now = qcdb.mscale(ethylene_cation.geometry(), qcdb.psi_bohr2angstroms)
qcdb.compare_matrices(geom_cat, geom_now, 6, "Ethylene cation geometry and orientation") #TEST


# C2 Symmetry
H2O2 = qcdb.Molecule("""
   O1
   O2, O1, rOO
   H1, O1, rOH, O2, aHOO
   H2, O2, rOH, O1, aHOO, H1, D

   rOO  = 1.4
   rOH  = 1.1
   aHOO = 105.
   D    = 95
""")

print("\tH2O2 Test...")
H2O2.update_geometry()
#H2O2.print_out()
#compare_strings("c2", H2O2.schoenflies_symbol(), "H2O2 point group");  #TEST
qcdb.compare_values(nre_h2o2, H2O2.nuclear_repulsion_energy(), 6, "H2O2 nuclear repulsion energy");  #TEST
geom_now = qcdb.mscale(H2O2.geometry(), qcdb.psi_bohr2angstroms)
qcdb.compare_matrices(geom_h2o2, geom_now, 6, "H2O2 geometry and orientation") #TEST


# Ci Symmetry
C4H4Cl2F2 = qcdb.Molecule("""
units    bohr
 C     0.432781050498     1.898774028282     0.810337938486
 C    -1.658744642774     0.805191018766    -0.984829058337
 C     1.658744642774    -0.805191018766     0.984829058337
 C    -0.432781050498    -1.898774028282    -0.810337938486
 H    -0.317971784026     2.532165941971     2.640915161238
 H    -1.615729990528     1.614062700629    -2.881498569657
 H     1.615729990528    -1.614062700629     2.881498569657
 H     0.317971784026    -2.532165941971    -2.640915161238
 Cl   -4.852178875691     1.024620478757     0.190249941464
 Cl    4.852178875691    -1.024620478757    -0.190249941464
 F    -1.913713787211    -3.739567959534     0.258534542158
 F     1.913713787211     3.739567959534    -0.258534542158
""")

print("\tC4H4Cl2F2 test...")
C4H4Cl2F2.update_geometry()
#C4H4Cl2F2.print_out()
#compare_strings("ci", C4H4Cl2F2.schoenflies_symbol(), "C4H4Cl2F2 point group");  #TEST
qcdb.compare_values(nre_c4h4cl2f2, C4H4Cl2F2.nuclear_repulsion_energy(), 6, "C4H4Cl2F2 nuclear repulsion energy");  #TEST
geom_now = C4H4Cl2F2.geometry()
qcdb.compare_matrices(geom_c4h4cl2f2, geom_now, 6, "C4H4Cl2F2 geometry and orientation") #TEST


# S4 Symmetry (C2 Abelian)
Li_H2O_4_p = qcdb.Molecule("""
   1 1
   X
   Li 1 1.0
   X 2 1.0 1 90.0
   X 2 1.0 3 90.0 1 180.0
   O 2 oli 1 olix 3 -90.0
   O 2 oli 1 olix 3 90.0
   O 2 oli 4 olix 3 0.0
   O 2 oli 4 olix 3 180.0
   H 5 oh1 2 lioh1 1 xlioh1
   H 5 oh2 2 lioh2 1 xlioh2
   H 6 oh1 2 lioh1 1 xlioh1
   H 6 oh2 2 lioh2 1 xlioh2
   H 7 oh1 2 lioh1 4 -xlioh1
   H 7 oh2 2 lioh2 4 -xlioh2
   H 8 oh1 2 lioh1 4 -xlioh1
   H 8 oh2 2 lioh2 4 -xlioh2

   olix=52.0
   oli=1.9
   oh1=0.952
   oh2=0.950
   lioh1=125.4
   lioh2=124.8
   xlioh1=-40.0
   xlioh2=135.0
""")

print("\tLi(H20)_4^+ Test...")
Li_H2O_4_p.update_geometry()
#Li_H2O_4_p.print_out()
#compare_strings("c2", Li_H2O_4_p.schoenflies_symbol(), "Li(H20)_4^+ point group");  #TEST
qcdb.compare_values(nre_li, Li_H2O_4_p.nuclear_repulsion_energy(), 6, "Li(H20)_4^+ nuclear repulsion energy");  #TEST
geom_now = qcdb.mscale(Li_H2O_4_p.geometry(), qcdb.psi_bohr2angstroms)
qcdb.compare_matrices(geom_li, geom_now, 6, "Li(H2O)_4^+ geometry and orientation") #TEST

